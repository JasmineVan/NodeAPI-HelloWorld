'use strict';

var	util = require('mini-util'),
	Pipeline = require('./pipeline');

var PATTERN_MOUNT_POINT = /^([^\/]+?)?(\/.*?)?$/;

// Router constructor.
var	Router = util.inherit(Object, {
	/**
	 * Constructor.
	 */
	constructor: function () {
		this._pipelines = [];
	},

	/**
	 * Mount a new pipeline.
	 * @param point {string}
	 * @return {Object}
	 */
	mount: function (point) {
		var pipelines = this._pipelines,
			pipeline = null,
			re;

		if (re = point.match(PATTERN_MOUNT_POINT)) { // Assign.
			pipeline = new Pipeline({
				hostname: re[1] || '*',
				pathname: (re[2] || '/') + '*'
			});
			
			pipelines.push(pipeline);

			pipelines.sort(function (a, b) {
				// High priority pipeline should have lower array index.
				return a.compareTo(b);
			});
		}
		
		return pipeline;
	},

	/**
	 * Route to a pipeline.
	 * @param req {Object}
	 * @param res {Object}
	 * @param callback {Function}
	 */
	route: function (req, res, callback) {
		var pipelines = this._pipelines,
			len = pipelines.length,
			i = 0;

		for (; i < len; ++i) {
			if (pipelines[i].match(req)) {
				return pipelines[i].process(req, res, callback);
			}
		}
		
		// None of pipelines matches.
		callback(null);
	}
});

module.exports = Router;
