'use strict';

var PATTERN_SPECIAL_CHAR = /([\$\(\)\+\.\[\]\\\/\^\{\}\|])/g,
	PATTERN_QUESTION = /\?/g,
	PATTERN_ASTERISK = /\*/g,
	PATTERN_CARET = /^/,
	PATTERN_DOLLAR = /$/;
	
var cache = {};

/**
 * Compile wildcard string to RegExp.
 * @param pattern {string}
 * @return {RegExp}
 */
function compile(pattern) {
	pattern = pattern
		// Escape special characters.
		.replace(PATTERN_SPECIAL_CHAR, '\\$1')
		
		// Change wildcard character "?" to regular expression.
		.replace(PATTERN_QUESTION, '.')
		
		// Change wildcard character "*" to regular expression.
		.replace(PATTERN_ASTERISK, '.*?')
		
		// Head.
		.replace(PATTERN_CARET, '^')
		
		// Tail.
		.replace(PATTERN_DOLLAR, '$');

	return new RegExp(pattern);
}

/**
 * Test wildcard pattern on given value.
 * @param pattern {string}
 * @param value {string}
 * @return {boolean}
 */
module.exports = function (pattern, value) {
	if (!cache[pattern]) {
		cache[pattern] = compile(pattern);
	}
	
	return cache[pattern].test(value);
};